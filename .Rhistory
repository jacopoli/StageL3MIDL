dataset<-data_2300_restricted
showDeplacementSequence <- function (sequences){
sequences_r= data.frame(sequences["x_coord"], sequences["y_coord"], sequences["sequence_id"])
ggplot(data = sequences_r, mapping = aes(x=x_coord, y=y_coord))+
geom_line(aes(group=sequences_r$sequence_id), size=2)+
geom_point()
}
showDeplacementSequence(dataset)
View(dataset)
ggplot(data = sequences_r, mapping = aes(x=x_coord, y=y_coord))+
geom_line(aes(color=sequences_r$sequence_id), size=2)+
geom_point(aes(shape=sequences_r$sequence_id))
library("tidyverse")
library("ggplot2")
library("dplyr")
dataset<-data_2300_restricted
showDeplacementSequence <- function (sequences){
sequences_r= data.frame(sequences["x_coord"], sequences["y_coord"], sequences["sequence_id"])
ggplot(data = sequences_r, mapping = aes(x=x_coord, y=y_coord))+
geom_line(color=sequences_r$sequence_id, size=2)+
geom_point(aes(shape=sequences_r$sequence_id))
}
showDeplacementSequence(dataset)
ggplot(data = sequences_r, mapping = aes(x=x_coord, y=y_coord))+
geom_line(color=sequences_r$sequence_id, size=2)+
geom_point()
library("tidyverse")
library("ggplot2")
library("dplyr")
dataset<-data_2300_restricted
showDeplacementSequence <- function (sequences){
sequences_r= data.frame(sequences["x_coord"], sequences["y_coord"], sequences["sequence_id"])
ggplot(data = sequences_r, mapping = aes(x=x_coord, y=y_coord))+
geom_line(color=sequences_r$sequence_id, size=2)+
geom_point()
}
showDeplacementSequence(dataset)
ggplot(data = sequences_r, mapping = aes(x=x_coord, y=y_coord))+
geom_line(aes(color=sequences_r$sequence_id), size=2)+
geom_point()
library("tidyverse")
library("ggplot2")
library("dplyr")
dataset<-data_2300_restricted
showDeplacementSequence <- function (sequences){
sequences_r= data.frame(sequences["x_coord"], sequences["y_coord"], sequences["sequence_id"])
ggplot(data = sequences_r, mapping = aes(x=x_coord, y=y_coord))+
geom_line(aes(color=sequences_r$sequence_id), size=2)+
geom_point()
}
showDeplacementSequence(dataset)
library("tidyverse")
library("ggplot2")
library("dplyr")
dataset<-data_2300_restricted
showDeplacementSequence <- function (sequences){
sequences_r= data.frame(sequences["x_coord"], sequences["y_coord"], sequences["sequence_id"])
ggplot(data = sequences_r, mapping = aes(x=x_coord, y=y_coord))+
geom_line(aes(linetype=sequences_r$sequence_id), size=2)+
geom_point()
}
showDeplacementSequence(dataset)
library("tidyverse")
library("ggplot2")
library("dplyr")
dataset<-data_2300_restricted
showDeplacementSequence <- function (sequences){
sequences_r= data.frame(sequences["x_coord"], sequences["y_coord"], sequences["sequence_id"])
ggplot(data = sequences_r, mapping = aes(x=x_coord, y=y_coord))+
geom_line(aes(linetype=as.numeric(sequences_r$sequence_id)), size=2)+
geom_point()
}
showDeplacementSequence(dataset)
library("tidyverse")
library("ggplot2")
library("dplyr")
dataset<-data_2300_restricted
showDeplacementSequence <- function (sequences){
sequences_r= data.frame(sequences["x_coord"], sequences["y_coord"], sequences["sequence_id"])
ggplot(data = sequences_r, mapping = aes(x=x_coord, y=y_coord))+
geom_line(aes(linetype=scale_x_discrete(sequences_r$sequence_id)), size=2)+
geom_point()
}
showDeplacementSequence(dataset)
library("tidyverse")
library("ggplot2")
library("dplyr")
dataset<-data_2300_restricted
showDeplacementSequence <- function (sequences){
sequences_r= data.frame(sequences["x_coord"], sequences["y_coord"], sequences["sequence_id"])
ggplot(data = sequences_r, mapping = aes(x=x_coord, y=y_coord))+
geom_line(aes(linetype=scale_x_binned(sequences_r$sequence_id)), size=2)+
geom_point()
}
showDeplacementSequence(dataset)
library("tidyverse")
library("ggplot2")
library("dplyr")
dataset<-data_2300_restricted
showDeplacementSequence <- function (sequences){
sequences_r= data.frame(sequences["x_coord"], sequences["y_coord"], sequences["sequence_id"])
ggplot(data = sequences_r, mapping = aes(x=x_coord, y=y_coord))+
geom_line(aes(linetype=scale_x_continuous(sequences_r$sequence_id)), size=2)+
geom_point()
}
showDeplacementSequence(dataset)
library("tidyverse")
library("ggplot2")
library("dplyr")
dataset<-data_2300_restricted
showDeplacementSequence <- function (sequences){
sequences_r= data.frame(sequences["x_coord"], sequences["y_coord"], sequences["sequence_id"])
ggplot(data = sequences_r, mapping = aes(x=x_coord, y=y_coord))+
geom_line(linetype=sequences_r$sequence_id), size=2)+
library("tidyverse")
library("ggplot2")
library("dplyr")
dataset<-data_2300_restricted
showDeplacementSequence <- function (sequences){
sequences_r= data.frame(sequences["x_coord"], sequences["y_coord"], sequences["sequence_id"])
ggplot(data = sequences_r, mapping = aes(x=x_coord, y=y_coord))+
geom_line(linetype=sequences_r$sequence_id, size=2)+
geom_point()
}
showDeplacementSequence(dataset)
library("tidyverse")
library("ggplot2")
library("dplyr")
dataset<-data_2300_restricted
showDeplacementSequence <- function (sequences){
sequences_r= data.frame(sequences["x_coord"], sequences["y_coord"], sequences["sequence_id"])
ggplot(data = sequences_r, mapping = aes(x=x_coord, y=y_coord))+
geom_line(color=sequences_r$sequence_id, size=2)+
geom_point()
}
showDeplacementSequence(dataset)
dataPossession <- subset(ds_final, subset=(action==15))
dataPossession
possession_2300<-c(0)
possession_2350<-c(0)
dataPossession <- subset(ds_final, subset=(action==15))
for (i in 2:length(dataPossession)){
if (dataPossession[i]$team_id == 2300){
possession_2300[i]=possession_2300[i-1]+dataPossession[i]$ps_endstamp-dataPossession[i]$ps_timestamp
}
else{
possession_2350[i]=possession_2350[i-1]+dataPossession[i]$ps_endstamp-dataPossession[i]$ps_timesta
}
}
possession_2300<-c(0)
possession_2350<-c(0)
dataPossession <- subset(ds_final, subset=(action==15))
for (i in 1:length(dataPossession)){
if (dataPossession[i,]$team_id == 2300){
possession_2300[i,]=possession_2300[i-1,]+dataPossession[i,]$ps_endstamp-dataPossession[i]$ps_timestamp
}
else{
possession_2350[i,]=possession_2350[i-1,]+dataPossession[i,]$ps_endstamp-dataPossession[i]$ps_timesta
}
}
possession_2300<-c(0)
possession_2350<-c(0)
dataPossession <- subset(ds_final, subset=(action==15))
for (i in 2:length(dataPossession)+1){
if (dataPossession[i-1,]$team_id == 2300){
possession_2300[i,]=possession_2300[i-1,]+dataPossession[i,]$ps_endstamp-dataPossession[i]$ps_timestamp
}
else{
possession_2350[i,]=possession_2350[i-1,]+dataPossession[i,]$ps_endstamp-dataPossession[i]$ps_timesta
}
}
dataPossession
dataPossession[1]
dataPossession[,1]
dataPossession[1,]
possession_2300<-c(0)
possession_2350<-c(0)
dataPossession <- subset(ds_final, subset=(action==15))
for (i in 2:length(dataPossession)){
if (dataPossession[i-1,]$team_id == 2300){
possession_2300[i,]=possession_2300[i-1,]+dataPossession[i,]$ps_endstamp-dataPossession[i]$ps_timestamp
}
else{
possession_2350[i,]=possession_2350[i-1,]+dataPossession[i,]$ps_endstamp-dataPossession[i]$ps_timesta
}
}
dataPossession$diff <- dataPossession$ps_endstamp
possession_2300<-c(0)
possession_2350<-c(0)
dataPossession <- subset(ds_final, subset=(action==15))
dataPossession$diff <- dataPossession$ps_endstamp-dataPossession$ps_timestamp
for (i in 2:length(dataPossession)){
if (dataPossession[i-1,]$team_id == 2300){
possession_2300[i,]=possession_2300[i-1,]+dataPossession[i,]diff
possession_2300<-c(0)
possession_2350<-c(0)
dataPossession <- subset(ds_final, subset=(action==15))
dataPossession$diff <- dataPossession$ps_endstamp-dataPossession$ps_timestamp
for (i in 2:length(dataPossession)){
if (dataPossession[i-1,]$team_id == 2300){
possession_2300[i,]=possession_2300[i-1,]+dataPossession[i,]$diff
}
else{
possession_2350[i,]=possession_2350[i-1,]+dataPossession[i,]$diff
}
}
possession_2300<-c(0)
possession_2350<-c(0)
dataPossession <- subset(ds_final, subset=(action==15))
dataPossession$diff <- dataPossession$ps_endstamp-dataPossession$ps_timestamp
for (i in 2:length(dataPossession)){
if (dataPossession[i-1,]$team_id == 2300){
possession_2300[i,]=possession_2300[i-1,]+dataPossession[i,]$diff
}
else{
possession_2350[i,]=possession_2350[i-1,]+dataPossession[i,]$diff
}
}
dataPossession <- subset(ds_final, subset=(action==15))
dataPossession$diff <- dataPossession$ps_endstamp-dataPossession$ps_timestamp
n<-length(dataPossession)
possession_2300<-rep(0,n)
possession_2350<-rep(0,n)
for (i in 2:n){
if (dataPossession[i-1,]$team_id == 2300){
possession_2300[i,]=possession_2300[i-1,]+dataPossession[i,]$diff
}
else{
possession_2350[i,]=possession_2350[i-1,]+dataPossession[i,]$diff
}
}
dataPossession <- subset(ds_final, subset=(action==15))
dataPossession$diff <- dataPossession$ps_endstamp-dataPossession$ps_timestamp
n<-length(dataPossession)
possession_2300<-rep(0,n+1)
possession_2350<-rep(0,n+1)
for (i in 2:n){
if (dataPossession[i-1,]$team_id == 2300){
possession_2300[i+1]=possession_2300[i]+dataPossession[i,]$diff
}
else{
possession_2350[i+1]=possession_2350[i]+dataPossession[i,]$diff
}
}
possession_2300
dataPossession <- subset(ds_final, subset=(action==15))
dataPossession$diff <- dataPossession$ps_endstamp-dataPossession$ps_timestamp
n<-length(dataPossession)
possession_2300<-rep(0,n+1)
possession_2350<-rep(0,n+1)
for (i in 2:n){
if (dataPossession[i-1,]$team_id == 2300){
possession_2300[i+1]=possession_2300[i]+dataPossession[i,]$diff
possession_2350[i+1]=possession_2350[i]
}
else{
possession_2350[i+1]=possession_2350[i]+dataPossession[i,]$diff
possession_2300[i+1]=possession_2300[i]
}
}
possession_2300
length(possession_2300)
length(dataPossession)
View(dataPossession)
dataPossession <- subset(ds_final, subset=(action==15))
dataPossession$diff <- dataPossession$ps_endstamp-dataPossession$ps_timestamp
n<-nrow(dataPossession)
possession_2300<-rep(0,n+1)
possession_2350<-rep(0,n+1)
for (i in 2:n){
if (dataPossession[i-1,]$team_id == 2300){
possession_2300[i+1]=possession_2300[i]+dataPossession[i,]$diff
possession_2350[i+1]=possession_2350[i]
}
else{
possession_2350[i+1]=possession_2350[i]+dataPossession[i,]$diff
possession_2300[i+1]=possession_2300[i]
}
}
possession_2300
evolPossession<- tibble(possession_2300, possession_2350)
evolPossession
ggplot(data=evolPossession)+
geom_bar()
ggplot(data=evolPossession, mapping=aes(possession_2300, possession_2350))+
geom_bar()
ggplot(data=evolPossession, mapping=aes(x=possession_2300, y=possession_2350))+
geom_bar()
ggplot(data=evolPossession, mapping=aes(x=possession_2300, y=possession_2350))+
geom_bar(position="fill")
ggplot(data=evolPossession, mapping=aes(x=possession_2300, y=c(1:n))+
geom_bar(position="fill")
ggplot(data=evolPossession, mapping=aes(x=possession_2300, y=c(1:n)))+
library("tidyverse")
library("ggplot2")
library("dplyr")
dataset<-data_2300_restricted
### Plot les actions
showDeplacementSequence <- function (sequences){
sequences_r= data.frame(sequences["x_coord"], sequences["y_coord"], sequences["sequence_id"])
ggplot(data = sequences_r, mapping = aes(x=x_coord, y=y_coord))+
geom_line(color=sequences_r$sequence_id, size=2)+
geom_point()
}
showDeplacementSequence(dataset)
### Calcul le pourcentage de possession.
dataPossession <- subset(ds_final, subset=(action==15))
dataPossession$diff <- dataPossession$ps_endstamp-dataPossession$ps_timestamp
n<-nrow(dataPossession)
possession_2300<-rep(0,n+1)
possession_2350<-rep(0,n+1)$
for (i in 2:n){
library("tidyverse")
library("ggplot2")
library("dplyr")
dataset<-data_2300_restricted
### Plot les actions
showDeplacementSequence <- function (sequences){
sequences_r= data.frame(sequences["x_coord"], sequences["y_coord"], sequences["sequence_id"])
ggplot(data = sequences_r, mapping = aes(x=x_coord, y=y_coord))+
geom_line(color=sequences_r$sequence_id, size=2)+
geom_point()
}
showDeplacementSequence(dataset)
### Calcul le pourcentage de possession.
dataPossession <- subset(ds_final, subset=(action==15))
dataPossession$diff <- dataPossession$ps_endstamp-dataPossession$ps_timestamp
n<-nrow(dataPossession)
possession_2300<-rep(0,n+1)
possession_2350<-rep(0,n+1)
for (i in 2:n){
if (dataPossession[i-1,]$team_id == 2300){
possession_2300[i+1]=possession_2300[i]+dataPossession[i,]$diff
possession_2350[i+1]=possession_2350[i]
}
else{
possession_2350[i+1]=possession_2350[i]+dataPossession[i,]$diff
possession_2300[i+1]=possession_2300[i]
}
}
evolPossession<- tibble(possession_2300, possession_2350)
hist(possession_2300)
hist(possession_2350)
library("tidyverse")
library("ggplot2")
library("dplyr")
library("bupaverse")
library("lubridate")
library("stringr")
library("stringdist")
library("DescTools")
library("PTXQC")
library("qgraph")
setwd("c:\\Users\\malat\\OneDrive\\Bureau\\S6\\Stage\\StageL3MIDL")
source("seqToString.R")
source("utilsClustering.R")
#on supprime les valeurs nulles dans list_of_string
list_of_strings_full <- na.omit(list_of_strings)
#calcul de la matrice de distance
matrix<-stringdistmatrix(list_of_strings_full, list_of_strings_full, method = "lcs")
#Partie représentation graphique par un force-directed graph
GRAPHE=FALSE
if (GRAPHE){matrix_qg <-1/matrix
qgraph(matrix_qg, layout='spring', vsize=3)
}
#création de l'arbre
tree<-hclust(as.dist(matrix), method="ward.D")
dend<-as.dendrogram(tree)
par(mar=c(6.1, 4.1, 4.1, 2.1))
plot(tree)
N_CLUSTER = 3
#récupère les elements annotés de leur cluster + calcul des representants
cluster<-cutree(tree, N_CLUSTER)
df_clustered<-tibble(list_of_strings_full, cluster)
colnames(df_clustered)<-c("strings", "cluster_n")
nodes<-get_representants(df_clustered)
casted_data %>%
resource_matrix() %>%
plot()
View(ds_final_bis)
casted_data<-ds_final_bis #on prend le dataset complet (sans Possession)
colnames(casted_data)[2:3]<-c("start","complete")
View(casted_data)
library("tidyverse")
library("ggplot2")
library("dplyr")
library("bupaverse")
library("lubridate")
library("stringr")
library("stringdist")
library("DescTools")
library("PTXQC")
source("clustering.R")
CLUSTERED_DATA=FALSE #travail avec les données des clusters
if (CLUSTERED_DATA){
df_representants <- str_to_seq(nodes[1])
for (i in 2:N_CLUSTER){
df_representants<-rbind(df_representants, str_to_seq(nodes[i]))
}
colnames(df_representants)[9:10]<-c("start", "complete") #on renomme les colonnes timestamp/endstamp
casted_data <- df_representants %>%
convert_timestamps(columns = c("start", "complete"), format = ymd_hms) %>%
activitylog(case_id = "sequence_id", activity_id = "actionName", timestamps = c("start", "complete"), resource_id = "sequence_id")
}else{
casted_data<-ds_final_bis #on prend le dataset complet (sans Possession)
colnames(casted_data)[2:3]<-c("start","complete") %>%
convert_timestamps(columns = c("start", "complete"), format = ymd_hms) %>%
activitylog(case_id = "sequence_id", activity_id = "actionName", timestamps = c("start", "complete"), resource_id = "sequence_id")
}
casted_data<-ds_final_bis #on prend le dataset complet (sans Possession)
colnames(casted_data)[2:3]<-c("start","complete") %>%
convert_timestamps(columns = c("start", "complete"), format = ymd_hms) %>%
activitylog(case_id = "sequence_id", activity_id = "actionName", timestamps = c("start", "complete"), resource_id = "sequence_id")
casted_data<-ds_final_bis #on prend le dataset complet (sans Possession)
colnames(casted_data)[2:3]<-c("start","complete")
convert_timestamps(casted_data, columns = c("start", "complete"), format = ymd_hms) %>%
activitylog(case_id = "sequence_id", activity_id = "actionName", timestamps = c("start", "complete"), resource_id = "sequence_id")
colnames(df_representants)[9:10]<-c("start", "complete") #on renomme les colonnes timestamp/endstamp
casted_data <- df_representants %>%
convert_timestamps(columns = c("start", "complete"), format = ymd_hms) %>%
activitylog(case_id = "sequence_id", activity_id = "actionName", timestamps = c("start", "complete"), resource_id = "sequence_id")
casted_data<-ds_final_bis #on prend le dataset complet (sans Possession)
colnames(casted_data)[2:3]<-c("start","complete") %>%
activitylog(case_id = "sequence_id", activity_id = "actionName", timestamps = c("start", "complete"), resource_id = "sequence_id")
colnames(casted_data)[2:3]<-c("start","complete")
convert_timestamps(columns = c("start", "complete"), format = ymd_hms)
colnames(casted_data)[2:3]<-c("start","complete")
convert_timestamps(casted_data, columns = c("start", "complete"), format = ymd_hms)
casted_data<-convert_timestamps(casted_data, columns = c("start", "complete"), format = ymd_hms)
colnames(casted_data)[9:10]<-c("start","complete")
casted_data<-convert_timestamps(casted_data, columns = c("start", "complete"), format = ymd_hms)
activitylog(case_id = "sequence_id", activity_id = "actionName", timestamps = c("start", "complete"), resource_id = "sequence_id")
casted_data<-ds_final_bis #on prend le dataset complet (sans Possession)
colnames(casted_data)[9:10]<-c("start","complete")
casted_data<-convert_timestamps(casted_data, columns = c("start", "complete"), format = ymd_hms)
activitylog(casted_data, case_id = "sequence_id", activity_id = "actionName", timestamps = c("start", "complete"), resource_id = "sequence_id")
#création du graphe POV frequence d'apparition
casted_data %>%
process_map(frequency("relative"))
casted_data<-activitylog(casted_data, case_id = "sequence_id", activity_id = "actionName", timestamps = c("start", "complete"), resource_id = "sequence_id")
casted_data %>%
process_map(frequency("relative"))
casted_data %>%
process_map(performance(mean, units="secs"))
casted_data %>%
resource_matrix() %>%
plot()
casted_data %>%
resource_matrix()
library("tidyverse")
library("ggplot2")
library("dplyr")
library("bupaverse")
library("lubridate")
library("stringr")
library("stringdist")
library("DescTools")
library("PTXQC")
source("clustering.R")
CLUSTERED_DATA=FALSE #travail avec les données des clusters
if (CLUSTERED_DATA){
df_representants <- str_to_seq(nodes[1])
for (i in 2:N_CLUSTER){
df_representants<-rbind(df_representants, str_to_seq(nodes[i]))
}
colnames(df_representants)[9:10]<-c("start", "complete") #on renomme les colonnes timestamp/endstamp
casted_data <- df_representants %>%
convert_timestamps(columns = c("start", "complete"), format = ymd_hms) %>%
activitylog(case_id = "sequence_id", activity_id = "actionName", timestamps = c("start", "complete"), resource_id = "sequence_id")
}else{
casted_data<-ds_final_bis #on prend le dataset complet (sans Possession)
colnames(casted_data)[9:10]<-c("start","complete")
casted_data<-convert_timestamps(casted_data, columns = c("start", "complete"), format = ymd_hms)
casted_data_log<-activitylog(casted_data, case_id = "sequence_id", activity_id = "actionName", timestamps = c("start", "complete"), resource_id = "sequence_id")
}
#création du graphe POV frequence d'apparition
casted_data_log %>%
process_map(frequency("relative"))
#création du graphe POV performance durée
casted_data_log %>%
process_map(performance(mean, units="secs"))
#graphique mettant en avant la durée moyenne de chaque action
casted_data_log %>%
processing_time("activity") %>%
plot()
#graphique pour precedence matrix
casted_data_log %>%
resource_matrix() %>%
plot()
casted_data_log
case_id(casted_data_log)
colnames(casted_data)[9:10]<-c("start","complete")
colnames(casted_data)[8]<-"case_classifier"
casted_data<-ds_final_bis #on prend le dataset complet (sans Possession)
colnames(casted_data)[9:10]<-c("start","complete")
colnames(casted_data)[8]<-"case_classifier"
casted_data<-convert_timestamps(casted_data, columns = c("start", "complete"), format = ymd_hms)
casted_data_log<-activitylog(casted_data, case_id = "case_classifier", activity_id = "actionName", timestamps = c("start", "complete"), resource_id = "case_classifier")
casted_data_log %>%
resource_matrix() %>%
plot()
rlang::last_trace()
casted_data_log %>%
processing_time("activity") %>%
plot()
casted_data<-ds_final #on prend le dataset complet (sans Possession)
colnames(casted_data)[9:10]<-c("start","complete")
casted_data<-convert_timestamps(casted_data, columns = c("start", "complete"), format = ymd_hms)
casted_data_log<-activitylog(casted_data, case_id = "sequence_id", activity_id = "actionName", timestamps = c("start", "complete"), resource_id = "sequence_id")
casted_data_log %>%
processing_time("activity") %>%
plot()
